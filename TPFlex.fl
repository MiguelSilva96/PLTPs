%option noyywrap

L       [a-z]|ú|ù|á|à|ç|é|è|õ|ó|ò|ã|ì|í|\.
LM      [A-Z]|Ú|Ù|Á|À|Ç|É|È|Õ|Ó|Ò|Ã|Ì|Í
T       (author|editor)


%%
  int i = 0, j = 0, x;
  char **nomesProprios = malloc(sizeof(char*)*20);
  char *token, *nomes;
  int printNonMatched = 0;
  for(x = 0; x < 20; x++) {
	nomesProprios[x] = malloc(sizeof(char)*64);
  }
  char apelido[64];
  FILE *output = fopen("teste1.txt", "w");

@.*  { fprintf(output, "%s", yytext); }

\{?\\'a\}?    { fprintf(output, "á"); }
\{?\\'A\}?    { fprintf(output, "Á"); }
\{?\\'e\}?    { fprintf(output, "é"); }
\{?\\'i\}?    { fprintf(output, "í"); }
\{?\\'o\}?    { fprintf(output, "ó"); }
\{?\\'u\}?    { fprintf(output, "ú"); }
\{?\\~a\}?    { fprintf(output, "ã"); }
\{?\c\{c\}\}? { fprintf(output, "ç"); }


[\ ]*{T}/[\ ]*[=][\ ]*["{][.\n]* {
	fprintf(output, "%s = {", yytext);
}

[\ ]*[a-z]+[\ ]*[=][\ ]*["{][.\n]* {
	fprintf(output, "%s", yytext);
}

[\}\"][\,] { fprintf(output, "},\n"); }
[\}\"]/[\n] { fprintf(output, "}\n"); }


{LM}{L}+/([\,]|([\ ]and|[\}\"])) {
	if(i == 0) 
		sprintf(apelido,"%s", yytext);
	else
		sprintf(apelido,"%s, ", yytext);

	for(j = 0; j < i; j++)
		strcat(apelido, nomesProprios[j]);

	i = 0;
	fprintf(output, "%s", apelido);
}

[A-ZÁÉÍÓÚ]/[\.]|({L}+([A-Z]{L})?([\ ][A-Z]{L}+)*(([\ ]and)|[\}\"])) {
	sprintf(nomesProprios[i], "%s.", yytext);
	i++;
}

[\ ]and[\ ]   { fprintf(output, "%s", yytext); }

({LM}{L}+[\ ]?)+[\,][\ ]*{LM}{L}+([\ ]+{LM}{L}+)* {
	token = strtok(yytext, ",");
	nomes = strtok(NULL, ",");
	nomes = strtok(nomes, " ");
	fprintf(output, "%s, ", token);
    while(nomes != NULL) {
      	fprintf(output, "%c.", nomes[0]); 		
      	nomes = strtok(NULL, " ");
   }
}

%%


int main (int argc, char* argv[]) {
    FILE *input;
    input = fopen(argv[1], "r");
    yyin = input;
    yylex();
    return 0;
}
